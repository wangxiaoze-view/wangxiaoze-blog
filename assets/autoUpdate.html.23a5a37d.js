import{_ as p,X as e,Y as o,Z as n,$ as s,a1 as c,a2 as a,y as i}from"./framework.ba356234.js";const l="/assets/images/auto_1.png",u="/assets/images/auto_2.png",r="/assets/images/auto_3.png",k="/assets/images/auto_4.png",d="/assets/images/auto_5.png",v="/assets/images/auto_fx.png",m={},b=a('<div class="custom-container info"><p class="custom-container-title">背景介绍</p><p>对于常规网站或者系统来讲， 总会有提示更新或者更新记录的进程。而对于轻量间接的 web 来说同时也有这样的功能；</p><p>如果你在维护一个系统或者网站的时候，是会怎么提示用户你的系统更新呢? 发邮件吗？发短信通知吗？ 都不是， 如发邮件，发短信通知成本太大，且容易造成垃圾短信或者邮件被拦截从而不知；</p><p>想要用户明确系统有工程师在维护且开发，是要有明确提示的；如果细小的功能或者业务，可能不被了解或者使用，那就很长一段时间内用户感知该系统是否已停止更新或者维护呢？在这样的情况下，就要通知到客户群，针对优化更新部分作为日志去分享或者培训； 较为耗费人力时间；花费时间去告知用户我的系统优化了哪些功能并以书面的形式告知， 麻烦且浪费时间；</p><p>针对与这些问题，该如何解决呢? 优雅的一个想法是什么样子呢？</p></div><p>日志更新功能想法：（一般组件库，系统工具会有， 像业务系统非必要）</p><p>添加更新日志的功能， 可查看以往更新系统的记录；(包括更新时间，内容，修复的什么问题。。。)</p><p>以网页的形式告知用户更新的内容；更加清晰明了；</p><h2 id="系统资源-功能的更新想法" tabindex="-1"><a class="header-anchor" href="#系统资源-功能的更新想法" aria-hidden="true">#</a> 系统资源，功能的更新想法：</h2><h3 id="想法一-以接口的形式访问版本是否为新旧版本-不推荐" tabindex="-1"><a class="header-anchor" href="#想法一-以接口的形式访问版本是否为新旧版本-不推荐" aria-hidden="true">#</a> 想法一：以接口的形式访问版本是否为新旧版本 （不推荐）</h3><p>通过接口轮询，根据接口返回的版本与现在版本做比较，如返回的新版本则提示用户需要更新系统资源了；不过采用这样的方式去实现这样的功能是最为不推荐的；</p><p>首先，定时器消耗进程，长时间请求同一个接口且页面不关闭的情况下会一直消耗进程；长时间下去会造成页面出现很大的性能问题； 同时，就算性能较好的情况下，如何让用户去更新系统呢? 难不成走接口再去实现? 或者使用部署代码 再去实现吗? 很明显这样的情况不能被采用；</p><ul><li>难点一：轮询接口， 进程消耗导致的性能问题；卡顿，操作不便。。。</li><li>难点二：怎样让用户点击更新或者系统自动更新呢？部署代码？ 很明显， 这样的情况下，有俩大难点等待处理；</li></ul><p>只能说想法一，仅仅解决了版本的比较问题以及通知用户有新的版本需要更新；实际效果并不是我要看到的；就算最后实现更新，依旧还是性能问题的卡顿；</p><h3 id="想法二-webpack-pwa-工程化管理-推荐" tabindex="-1"><a class="header-anchor" href="#想法二-webpack-pwa-工程化管理-推荐" aria-hidden="true">#</a> 想法二：Webpack + pwa 工程化管理 (推荐)</h3><p>对于 <code>Vue，webpack</code> 并不默认，而对于 pwa 却有点模糊了；</p><h4 id="简单说一下-pwa-工程化" tabindex="-1"><a class="header-anchor" href="#简单说一下-pwa-工程化" aria-hidden="true">#</a> 简单说一下 pwa 工程化：</h4>',13),g={href:"https://www.jianshu.com/p/7845a13a67d7",target:"_blank",rel:"noopener noreferrer"},f=a(`<ul><li>使 web app 有沉浸式体验，也就是更靠近原生体验。如：去掉浏览器的地址栏和底部工具栏；在桌面上生成图标，方便再次进入。</li><li>提供独立于浏览器的缓存，并且可以接收服务器的推送。如：在没有网络，或者网络状态较差的时候，仍可访问缓存在本地的数据.</li></ul><p>既然 <code>pwa</code> 可以接受服务器的推送，我们是不是可以把他当成一个简易服务器， 然后再去检测系统的更新呢?</p><p>对于安装 vue + pwa 的步骤这里就省略了；</p><p>创建成功之后， 打开 src 目录我们可以看到多了一个配置文件 registerServiceWorker.js， 这个文件可以理解成资源服务器，我的理解就是检测文件的哈希值从而达到检测系统是否需要更新的效果；</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> register <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;register-service-worker&quot;</span><span class="token punctuation">;</span>
<span class="token comment">// todo: 切记： 只能在生产环境使用;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">===</span> <span class="token string">&quot;production&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token function">register</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">BASE_URL</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">service-worker.js</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
		<span class="token function">ready</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>
				<span class="token string">&quot;App is being served from cache by a service worker.\\n&quot;</span> <span class="token operator">+</span>
					<span class="token string">&quot;For more details, visit https://goo.gl/AFskqB&quot;</span>
			<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span><span class="token punctuation">,</span>
		<span class="token function">registered</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Service worker has been registered.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span><span class="token punctuation">,</span>
		<span class="token function">cached</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Content has been cached for offline use.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span><span class="token punctuation">,</span>
		<span class="token function">updatefound</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token comment">// todo: 这里可以提示， 资源正在下载</span>
			<span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&quot;资源正在下载&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;New content is downloading.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span><span class="token punctuation">,</span>
		<span class="token function">updated</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token comment">// todo: 这里可以提示， 资源下载成功，自动刷新页面</span>
			<span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&quot;资源下载成功， 10s后自动刷新&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
				window<span class="token punctuation">.</span>location<span class="token punctuation">.</span><span class="token function">reload</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">10000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;New content is available; please refresh.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span><span class="token punctuation">,</span>
		<span class="token function">offline</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>
				<span class="token string">&quot;No internet connection found. App is running in offline mode.&quot;</span>
			<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span><span class="token punctuation">,</span>
		<span class="token function">error</span><span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;Error during service worker registration:&quot;</span><span class="token punctuation">,</span> error<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span><span class="token punctuation">,</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>要想使用 pwa 那么就要简单的配置一下 webpack; pwa 搭配 webpack 效果更佳哦~</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// vue.config.js</span>
module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
	<span class="token literal-property property">pwa</span><span class="token operator">:</span> <span class="token punctuation">{</span>
		<span class="token literal-property property">workboxOptions</span><span class="token operator">:</span> <span class="token punctuation">{</span>
			<span class="token literal-property property">skipWaiting</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
			<span class="token literal-property property">clientsClaim</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
		<span class="token punctuation">}</span><span class="token punctuation">,</span>
		<span class="token literal-property property">themeColor</span><span class="token operator">:</span> <span class="token string">&quot;#ffffff&quot;</span><span class="token punctuation">,</span>
		<span class="token literal-property property">msTileColor</span><span class="token operator">:</span> <span class="token string">&quot;#ffffff&quot;</span><span class="token punctuation">,</span>
		<span class="token literal-property property">appleMobileWebAppCapable</span><span class="token operator">:</span> <span class="token string">&quot;yes&quot;</span><span class="token punctuation">,</span>
		<span class="token literal-property property">appleMobileWebAppStatusBarStyle</span><span class="token operator">:</span> <span class="token string">&quot;black&quot;</span><span class="token punctuation">,</span>
		<span class="token literal-property property">manifestOptions</span><span class="token operator">:</span> <span class="token punctuation">{</span>
			<span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;安帮客&quot;</span><span class="token punctuation">,</span>
			<span class="token literal-property property">short_name</span><span class="token operator">:</span> <span class="token string">&quot;安帮客&quot;</span><span class="token punctuation">,</span>
			<span class="token literal-property property">background_color</span><span class="token operator">:</span> <span class="token string">&quot;#ffffff&quot;</span><span class="token punctuation">,</span>
		<span class="token punctuation">}</span><span class="token punctuation">,</span>
	<span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>打包测试一下 <code>pnpm run build</code></p><figure><img src="`+l+'" alt="打包效果图" tabindex="0" loading="lazy"><figcaption>打包效果图</figcaption></figure><p>打包之后， 多了俩个文件: <code>precache-manifest， service-worker</code></p><p><img src="'+u+'" alt="打包效果图" loading="lazy"><img src="'+r+'" alt="打包效果图" loading="lazy"></p><p>部署到线上环境: <img src="'+k+'" alt="打包效果图" loading="lazy"></p><p>可以进行修改测试, <img src="'+d+'" alt="打包效果图" loading="lazy"></p><h2 id="功能扩展-只是想法-个人觉得可以试一下-但未知问题还未确定" tabindex="-1"><a class="header-anchor" href="#功能扩展-只是想法-个人觉得可以试一下-但未知问题还未确定" aria-hidden="true">#</a> 功能扩展 （只是想法，个人觉得可以试一下；但未知问题还未确定；）</h2><ul><li>扩展一： 如某一个功能，没更新之前的版本有一个按钮， 但是这个功能只有在新版本才会有，我点击按钮提示更新， 但是不更新仍可以使用旧的版本， 只是该功能只有在更新之后才会有；不会影响-之前的版本；实现一个不更新版本仍可以使用旧版本的功能；</li><li>扩展二：告知用户该系统又在维护或者开发，</li></ul><p><strong>个人理解： 其实就是根据文件哈希值的变化去检测文件是否更新， 更新之后作相对应的操作； 然后刷新页面从而达到预期的效果；</strong></p><h2 id="思维导图" tabindex="-1"><a class="header-anchor" href="#思维导图" aria-hidden="true">#</a> 思维导图</h2><figure><img src="'+v+'" alt="打包效果图" tabindex="0" loading="lazy"><figcaption>打包效果图</figcaption></figure>',18);function h(_,q){const t=i("ExternalLinkIcon");return e(),o("div",null,[b,n("p",null,[s("pwa 化主要解决了两大问题, "),n("a",g,[s("去了解"),c(t)])]),f])}const y=p(m,[["render",h],["__file","autoUpdate.html.vue"]]);export{y as default};
