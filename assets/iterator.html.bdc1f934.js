const t=JSON.parse('{"key":"v-3625cbde","path":"/js/iterator.html","title":"Array.prototype[@@iterator]()","lang":"zh-CN","frontmatter":{"title":"Array.prototype[@@iterator]()","index":false,"icon":"flower","isOriginal":true,"tag":["iterator"],"category":["JavaScript"],"description":"::: tip 🌏 简单介绍 💡 Iterator 是一种接口, 目的是为不同的数据结构提供统一的数据访问机制，任何数据结构只要部署了 Iterator 接口，就可以实现遍历操作 💡 但是 JavaScript 语言中没有接口的概念，我们可以把它理解成一种特殊的对象 - 迭代器对象，返回这个对象的方法叫做迭代器方法 ::: 语法 ```js ar...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/js/iterator.html"}],["meta",{"property":"og:site_name","content":"王小泽的前端笔记"}],["meta",{"property":"og:title","content":"Array.prototype[@@iterator]()"}],["meta",{"property":"og:description","content":"::: tip 🌏 简单介绍 💡 Iterator 是一种接口, 目的是为不同的数据结构提供统一的数据访问机制，任何数据结构只要部署了 Iterator 接口，就可以实现遍历操作 💡 但是 JavaScript 语言中没有接口的概念，我们可以把它理解成一种特殊的对象 - 迭代器对象，返回这个对象的方法叫做迭代器方法 ::: 语法 ```js ar..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2023-02-26T09:21:29.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:tag","content":"iterator"}],["meta",{"property":"article:modified_time","content":"2023-02-26T09:21:29.000Z"}]]},"excerpt":"","headers":[{"level":2,"title":"语法","slug":"语法","link":"#语法","children":[]},{"level":2,"title":"Iterator(迭代器)的概念","slug":"iterator-迭代器-的概念","link":"#iterator-迭代器-的概念","children":[]},{"level":2,"title":"一个 🌰","slug":"一个-🌰","link":"#一个-🌰","children":[]},{"level":2,"title":"模拟返回","slug":"模拟返回","link":"#模拟返回","children":[]}],"git":{"createdTime":1677403289000,"updatedTime":1677403289000,"contributors":[{"name":"wangxiaoze","email":"wangxiaoze@petalmail.com","commits":1}]},"readingTime":{"minutes":2.22,"words":665},"autoDesc":true,"localizedDate":"2023年2月26日","filePathRelative":"js/iterator.md"}');export{t as data};
